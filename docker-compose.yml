version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file: ./.env
    networks:
      - kittygram_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend/
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      db:
        condition: service_healthy
    env_file: ./.env
    networks:
      - kittygram_network

  frontend:
    build: ./frontend/
    volumes:
      - static_volume:/app/build
    depends_on:
      - backend
    networks:
      - kittygram_network

  gateway:
    build: ./nginx/
    ports:
      - "9000:80"
    volumes:
      - static_volume:/var/html/static_from_build
      - media_volume:/var/html/media
    depends_on:
      - backend
      - frontend
    networks:
      - kittygram_network

volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  kittygram_network:
    driver: bridge
